// Generated by Haxe 4.0.5
#ifndef INCLUDED_Host
#define INCLUDED_Host

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Host)



class HXCPP_CLASS_ATTRIBUTES Host_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Host_obj OBJ_;
		Host_obj();

	public:
		enum { _hx_ClassId = 0x2febfb88 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Host")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Host"); }

		inline static hx::ObjectPtr< Host_obj > __new() {
			hx::ObjectPtr< Host_obj > __this = new Host_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< Host_obj > __alloc(hx::Ctx *_hx_ctx) {
			Host_obj *__this = (Host_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Host_obj), false, "Host"));
			*(void **)__this = Host_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		static hx::ScriptFunction __script_construct;
		//~Host_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Host",88,fb,eb,2f); }

		static void main();
		static ::Dynamic main_dyn();

};


#endif /* INCLUDED_Host */ 
